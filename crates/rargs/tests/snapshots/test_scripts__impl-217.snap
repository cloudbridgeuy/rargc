---
source: crates/rargc/tests/test_scripts.rs
description: "[stdout] novelai.sh generate-stream --help"
expression: "String::from_utf8(match \"stdout\" {\n            \"stdout\" => output.stdout,\n            \"stderr\" => output.stderr,\n            _ => panic!(\"invalid stream\"),\n        }).unwrap_or_else(|e|\n        panic!(\"failed to execute the '{dst}' script with error: {e}\"))"
---
Generate a completion stream

[4mUsage:[0m
  generate-stream [OPTIONS] [INPUT]
  generate-stream -h|--help

[4mArguments:[0m
  INPUT
    Input for the text generation model (reads from stdin if empty)
    [@default -]

[4mOptions:[0m
  -M --max-length [<MAX-LENGTH>]
    Maximum length of the generated text. [@min 1, @max 2048]
    [@default 40]
  -m --min-length [<MIN-LENGTH>]
    Minimum length of the generated text. [@min 1, @max 2048]
    [@default 1]
  -m --model [<MODEL>]
    Used text generation model.
    [@default kayra-v1, @choices kayra-v1, clio-v1, purple, green, red, blue, sigurd-2.9b-v1, cassandra, infillmodel, hypebot, krake-v2, genji-jp-6b-v2, genji-python-6b, euterpe-v2, 6B-v4, 2.7B]
  --novelai-api-key [<NOVELAI-API-KEY>]
    NovelAI API Key
  --novelai-endpoint [<NOVELAI-ENDPOINT>]
    NovelAI API Endpoint
    [@default https://api.novelai.net/ai/generate-stream]
  -t --temperature [<TEMPERATURE>]
    Temperature for the generation. [@min 0.1, @max 100]
    [@default 3]
  -u --use-string [<USE-STRING>]
    If false, input and output strings should be Base64-encoded uint16 numbers representing tokens.
    [@default true, @choices true, false]
  -h --help
    Print help

