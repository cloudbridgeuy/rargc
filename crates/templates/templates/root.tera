{%- set_global required = [] -%}
{%- set_global defaults = [] -%}
{%- set_global default_flags = [] -%}
{%- set_global choices = [] -%}
{%- if options -%}
  {%- for key, option in options -%}
    {%- if option["required"] -%}
      {%- set_global required = required | concat(with=option) -%}
    {%- endif -%}
    {%- if option["default"] -%}
      {%- set_global defaults = defaults | concat(with=option) -%}
    {%- endif -%}
    {% if option["choices"] -%}
      {%- set_global choices = choices | concat(with=option) -%}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}
{%- if positional_arguments -%}
  {%- for arg in positional_arguments -%}
    {%- if arg["required"] -%}
      {%- set_global required = required | concat(with=arg) -%}
    {%- endif -%}
    {%- if arg["default"] -%}
      {%- set_global defaults = defaults | concat(with=arg) -%}
    {%- endif -%}
    {% if arg["choices"] -%}
      {%- set_global choices = choices | concat(with=arg) -%}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}
{%- if flags -%}
  {%- for key, flag in flags -%}
    {%- if flag["default"] -%}
      {%- set_global default_flags = default_flags | concat(with=flag) -%}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

root() {
{%- if flags %}
  {%- for name, option in flags %}
  local rargs_{{ name | replace(from="-", to="_") }}
  {%- endfor %}
{%- endif %}
{%- if options %}
  {%- for name, option in options %}
    {%- if option["multiple"] %}
  declare -a rargs_{{ name | replace(from="-", to="_") }}
    {%- else %}
  local rargs_{{ name | replace(from="-", to="_") }}
    {%- endif %}
  {%- endfor %}
{%- endif %}

{%- if positional_arguments %}
  {%- for arg in positional_arguments %}
    {%- if arg["multiple"] %}
  declare -a rargs_{{ name | replace(from="-", to="_") }}
    {%- else %}
  local rargs_{{ arg["name"] | replace(from="-", to="_") }}
    {%- endif %}
  {%- endfor %}
{%- endif %}

{%- if envs and envs | length > 0 %}
  # Parse environment variables
  {% include "check_environment_variables.tera" %}
{%- endif %}
{% if default_flags | length > 0 -%}
  {%- for def in default_flags -%}
    {%- if def["multiple"] %}
  if [[ "${% raw %}{{% endraw %}{% raw %}#{% endraw %}rargs_{{ def["name"] | replace(from="-", to="_") }}[@]}" -eq 0 ]]; then
    rargs_{{ def["name"] | replace(from="-", to="_") }}=({{ def["default"] }})
  fi
    {%- else %}
  if [[ -z "$rargs_{{ def["name"] | replace(from="-", to="_") }}" ]]; then
    rargs_{{ def["name"] | replace(from="-", to="_") }}="{{ def["default"] }}"
  fi
    {%- endif %}
  {%- endfor %}
{%- endif %}
  # Parse command arguments
  parse_root "$@"
{% if rules -%}
  {%- if rules is containing("no-first-option-help") and rules is not containing("custom-usage") %}
  # Rule `no-first-option-help`: Render the global or command usage if the `-h|--help` option is
  #                              is provided anywhere on the command, not just as the first option.
  #                              Handling individual functions case by case.
  if [[ -n "$rargs_help" ]]; then
    usage
    exit 0
  fi
  {%- endif -%}
{%- endif -%}
{%- if dep and dep | length > 0 %}
  # Check dependencies
  {%- include "check_dependencies.tera" %}
{%- endif %}
{%- if defaults | length > 0 -%}
  {%- for def in defaults -%}
    {%- if def["multiple"] %}
  if [[ "${% raw %}{{% endraw %}{% raw %}#{% endraw %}rargs_{{ def["name"] | replace(from="-", to="_") }}[@]}" -eq 0 ]]; then
    rargs_{{ def["name"] | replace(from="-", to="_") }}=({{ def["default"] }})
  fi
    {%- else %}
  if [[ -z "$rargs_{{ def["name"] | replace(from="-", to="_") }}" ]]; then
    rargs_{{ def["name"] | replace(from="-", to="_") }}="{{ def["default"] }}"
  fi
    {%- endif %}
  {%- endfor %}
{%- endif %}
{%- if choices | length > 0 %}
  {% for option in choices %}
    {%- if option["multiple"] %}
  for value in "${rargs_{{ option["name"] | replace(from="-", to="_") }}[@]}"; do
    if [[ ! "({{ option["choices"] | join(sep=" ") }})" =~ ${value} ]]; then
      printf "\e[31m%s\e[33m%s\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid option for " "{{ option["name"] }}" ": " "${value}" >&2
      usage >&2
      exit 1
    fi
  done
    {%- else %}
  if [[ -n "$rargs_{{ option["name"] | replace(from="-", to="_") }}" ]]; then
    if [[ ! "({{ option["choices"] | join(sep=" ") }})" =~ $rargs_{{ option["name"] | replace(from="-", to="_") }} ]]; then
      printf "\e[31m%s\e[33m%s\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid option for " "{{ option["name"] }}" ": " "$rargs_{{ option["name"] | replace(from="-", to="_") }}" >&2
      usage >&2
      exit 1
    fi
  fi
    {%- endif %}
  {%- endfor %}
{%- endif %}
{%- if required | length > 0 %}
  {% for option in required %}
    {%- if option["multiple"] %}
  if [[ "{%- raw %}${{%- endraw %}#rargs_{{ option["name"] | replace(from="-", to="_") }}[@]}" == 0 ]]; then
    {%- else %}
  if [[ -z "$rargs_{{ option["name"] | replace(from="-", to="_") }}" ]]; then
    {%- endif %}
    printf "\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Missing required option: " "{{ option["name"] }}" >&2
    usage >&2
    exit 1
  fi
  {%- endfor %}
{%- endif %}
{%- if any and any["required"] %}
  if [[ "{%- raw %}${{%- endraw %}#rargs_other_args[@]}" == 0 ]]; then
    printf "\e[31m%s\e[0m\n\n" "Missing required additional argument" >&2
    usage >&2
    exit 1
  fi
{%- endif %}
{%- if root and root | length > 0 %}
  {%- for line in root %}
{{ line }}
  {%- endfor %}
{%- else %}
  echo "No implementation body found for root function"
{%- endif %}
}

