{%- set_global required = [] -%}
{%- if options -%}
  {%- for key, option in options -%}
    {%- if option["required"] -%}
      {%- set_global required = required | concat(with=option) -%}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

parse_{{ command["name"] }}_arguments() {
  while [[ $# -gt 0 ]]; do
    case "${1:-}" in
    {%- if rules is not defined or rules is not containing("no-first-option-help") and rules is not containing("custom-usage") %}
      -h | --help)
        {{ command["name"] }}_usage
        exit
        ;;
    {%- endif %}
      *)
        break
        ;;
    esac
  done

  while [[ $# -gt 0 ]]; do
    key="$1"
    case "$key" in
    {%- if comand["flags"] %}{%- for key, flag in command["flags"] %}
      {% if flag["short"] -%}-{{ flag["short"] }} | {% endif -%}--{{ key }})
        args['--{{ key }}']=1
        shift
        ;;
    {%- endfor -%}{% endif %}
    {%- if command["options"] -%}{%- for key, option in command["options"] %}
      {% if option["short"] -%}-{{ option["short"] }} | {% endif -%}--{{ key }})
        {% if option["multiple"] -%}
          if [[ -z ${args['{{ key }}']+x} ]]; then
            args['{{ key }}']=$2
          else
            args['{{ key }}']="${args['{{ key }}']:-} $2"
          fi
        {% else -%}
          args['{{ key }}']=$2
        {% endif -%}
        shift 2
        ;;
    {%- endfor -%}{% endif %}
    {%- if flags %}{%- for key, flag in flags %}
      {% if flag["short"] -%}-{{ flag["short"] }} | {% endif -%}--{{ key }})
        args['--{{ key }}']=1
        shift
        ;;
    {%- endfor -%}{% endif %}
    {%- if options -%}{%- for key, option in options %}
      {% if option["short"] -%}-{{ option["short"] }} | {% endif -%}--{{ key }})
        args['{{ key }}']=$2
        shift 2
        ;;
    {%- endfor -%}{% endif %}
    {%- if rules and rules is containing("no-first-option-help") %}
      -h|--help)
        args['--help']=1
        shift 1
        ;;
    {% endif %}
      -?*)
        printf "invalid option: %s\n" "$key" >&2
        exit 1
        ;;
      *)
        {%- if command["positional_arguments"] %}
          {%- for arg in command["positional_arguments"] %}
            {%- if loop.first and loop.last %}
        if [[ -z ${args['{{ arg["name"] }}']+x} ]]; then
          args['{{ arg["name"] }}']=$key
          shift
        else
              {%- if arg["multiple"] %}
          args['{{ arg["name"] }}']="${args['{{ arg["name"] }}']} \"$key\""
          shift
              {%- else %}
          printf "Invalid argument: %s\n" "$key" >&2
          exit 1
              {%- endif %}
        fi
            {%- elif loop.first %}
        if [[ -z ${args['{{ arg["name"] }}']+x} ]]; then
          args['{{ arg["name"] }}']=$key
          shift
            {%- elif loop.last %}
        elif [[ -z ${args['{{ arg["name"] }}']+x} ]]; then
          args['{{ arg["name"] }}']=$key
          shift
        else
              {%- if arg["multiple"] %}
          args['{{ arg["name"] }}']="${args['{{ arg["name"] }}']} \"$key\""
          shift
              {%- else %}
          printf "Invalid argument: %s\n" "$key" >&2
          exit 1
              {%- endif %}
        fi
            {%- else %}
        elif [[ -z ${args['{{ arg["name"] }}']+x} ]]; then
          args['{{ arg["name"] }}']=$key
          shift
            {%- endif %}
          {%- endfor %}
      {%- else %}
        printf "Invalid argument: %s\n" "$key" >&2
        exit 1
      {%- endif %}
        ;;
    esac
  done
}
