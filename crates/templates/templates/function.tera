{%- set_global required = [] -%}
{%- set_global defaults = [] -%}
{%- set_global choices = [] -%}
{%- set_global _any = false %}
{%- if options -%}
  {%- if command["options"] %}
    {%- for key, option in options | merge(with=command["options"]) -%}
      {%- if option["required"] -%}
        {%- set_global required = required | concat(with=option) -%}
      {%- endif -%}
      {%- if option["default"] -%}
        {%- set_global defaults = defaults | concat(with=option) -%}
      {%- endif -%}
      {% if option["choices"] -%}
        {%- set_global choices = choices | concat(with=option) -%}
      {%- endif -%}
    {%- endfor -%}
  {%- else %}
    {%- for key, option in options -%}
      {%- if option["required"] -%}
        {%- set_global required = required | concat(with=option) -%}
      {%- endif -%}
      {%- if option["default"] -%}
        {%- set_global defaults = defaults | concat(with=option) -%}
      {%- endif -%}
      {% if option["choices"] -%}
        {%- set_global choices = choices | concat(with=option) -%}
      {%- endif -%}
    {%- endfor -%}
  {%- endif %}
{%- else -%}
  {%- if command["options"] -%}
    {%- for key, option in command["options"] -%}
      {%- if option["required"] -%}
        {%- set_global required = required | concat(with=option) -%}
      {%- endif -%}
      {%- if option["default"] -%}
        {%- set_global defaults = defaults | concat(with=option) -%}
      {%- endif -%}
      {% if option["choices"] -%}
        {%- set_global choices = choices | concat(with=option) -%}
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
{%- endif -%}
{%- if command["positional_arguments"] -%}
  {%- for arg in command["positional_arguments"] -%}
    {%- if arg["required"] -%}
      {%- set_global required = required | concat(with=arg) -%}
    {%- endif -%}
    {%- if arg["default"] -%}
      {%- set_global defaults = defaults | concat(with=arg) -%}
    {%- endif -%}
    {% if arg["choices"] -%}
      {%- set_global choices = choices | concat(with=arg) -%}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}
{%- set _envs = false %}
{%- if command["envs"] %}
  {%- if envs %}
    {%- set _envs = envs | merge(with=command["envs"]) %}
  {%- else %}
    {%- set _envs = command["envs"] %}
  {%- endif %}
{%- elif envs %}
  {%- set _envs = envs %}
{%- endif %}
{%- if any %}
  {%- if command["any"] %}
    {%- set _any = command["any"] %}
  {%- else %}
    {%- set _any = any %}
  {%- endif %}
{%- elif command["any"] %}
  {%- set _any = command["any"] %}
{%- endif %}
{%- set opts = false %}
{%- set fls = false %}
{%- set args = false %}
{%- if options %}
  {%- if command["options"] %}
    {%- set opts = options | merge(with=command["options"]) %}
  {%- else %}
    {%- set opts = options %}
  {%- endif %}
{%- else %}
  {%- if command["options"] %}
    {%- set opts = command["options"] %}
  {%- endif %}
{%- endif %}
{%- if flags %}
  {%- if command["flags"] %}
    {%- set fls = flags | merge(with=command["flags"]) %}
  {%- else %}
    {%- set fls = flags %}
  {%- endif %}
{%- else %}
  {%- if command["flags"] %}
    {%- set fls = command["flags"] %}
  {%- endif %}
{%- endif %}
{%- if positional_arguments %}
  {%- if command["positional_arguments"] %}
    {%- set args = command["positional_arguments"] %}
  {%- else %}
    {%- set args = positional_arguments %}
  {%- endif %}
{%- else %}
  {%- if command["positional_arguments"] %}
    {%- set args = command["positional_arguments"] %}
  {%- endif %}
{%- endif %}

{%- if command["description"] -%}
# {{ command["description"] }}
{% endif -%}
{% if command["help"] -%}
# {{ command["help"] }}
{% endif -%}
{{ command["name"] }}() {
{%- if opts %}
  {%- for name, option in opts %}
    {%- if option["multiple"] %}
  declare -a rargs_{{ name | replace(from="-", to="_") }}
    {%- endif %}
  {%- endfor %}
{%- endif %}

{%- if args %}
  {%- for arg in args %}
    {%- if arg["multiple"] %}
  declare -a rargs_{{ name | replace(from="-", to="_") }}
    {%- endif %}
  {%- endfor %}
{%- endif %}

{%- if _envs and _envs | length > 0 %}
  # Parse environment variables
  {% include "check_environment_variables.tera" %}
{%- endif %}
  # Parse command arguments
  parse_{{ command["name"] }}_arguments "$@"
{% if rules -%}
  {%- if rules is containing("no-first-option-help") and rules is not containing("custom-usage") %}
  # Rule `no-first-option-help`: Render the global or command usage if the `-h|--help` option is
  #                              is provided anywhere on the command, not just as the first option.
  #                              Handling individual functions case by case.
  if [[ -n "$rargs_help" ]]; then
    {{ command["name"] }}_usage
    exit 0
  fi
  {%- endif -%}
{%- endif -%}
{%- if command["dep"] and command["dep"] | length > 0 -%}
  {% set dep = command["dep"] %}
  # Check dependencies
  {%- include "check_dependencies.tera" %}
{%- endif %}
{%- if defaults | length > 0 %}
  {% for option in defaults %}
    {% if option["multiple"] %}
  if [[ "${% raw %}{{% endraw %}{% raw %}#{% endraw %}rargs_{{ option["name"] | replace(from="-", to="_") }}[@]}" -eq 0 ]]; then
    rargs_{{ option["name"] | replace(from="-", to="_") }}=({{ option["default"] }})
  fi
    {% else %}
  if [[ -z "$rargs_{{ option["name"] | replace(from="-", to="_") }}" ]]; then
    rargs_{{ option["name"] | replace(from="-", to="_") }}="{{ option["default"] }}"
  fi
    {% endif %}
  {%- endfor %}
{%- endif %}
{%- if choices | length > 0 %}
  {% for option in choices %}
  if [[ -n "$rargs_{{ option["name"] | replace(from="-", to="_") }}" ]]; then
    {%- if option["multiple"] %}
    for value in "${rargs_{{ option["name"] | replace(from="-", to="_") }}[@]}"; do
      if [[ ! "({{ option["choices"] | join(sep=" ") }})" =~ ${value} ]]; then
        printf "\e[31m%s\e[33m%s\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid option for " "{{ option["name"] }}" ": " "${value}" >&2
        {{ command["name"] }}_usage >&2
        exit 1
      fi
    done
    {%- else %}
    if [[ ! "({{ option["choices"] | join(sep=" ") }})" =~ $rargs_{{ option["name"] | replace(from="-", to="_") }} ]]; then
      printf "\e[31m%s\e[33m%s\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid option for " "{{ option["name"] }}" ": " "$rargs_{{ option["name"] | replace(from="-", to="_") }}" >&2
      {{ command["name"] }}_usage >&2
      exit 1
    fi
    {%- endif %}
  fi
  {%- endfor %}
{%- endif %}
{%- if _any and _any["required"] %}
  if [[ "{%- raw %}${{%- endraw %}#other_args[@]}" == "0" ]]; then
    printf "\e[31m%s\e[0m\n\n" "Missing required additional argument" >&2
    {{ command["name"] }}_usage >&2
    {%- raw %}
    exit 1
  fi
  {%- endraw %}
{%- endif %}
{%- if required | length > 0 %}
  {% for option in required %}
    {%- if option["multiple"] %}
  if [[ "{% raw %}${{%endraw %}#rargs_{{ option["name"] | replace(from="-", to="_") }}[@]}" == 0 ]]; then
    {%- else %}
  if [[ -z "$rargs_{{ option["name"] | replace(from="-", to="_") }}" ]]; then
    {%- endif %}
    printf "\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Missing required option: " "{{ option["name"] }}" >&2
    {{ command["name"] }}_usage >&2
    exit 1
  fi
  {%- endfor %}
{%- endif %}
{%- if command["subcommand"] %}
  local sub="{{ command["subcommand"] }}"
{%- endif %}
{%- if command["lines"] %}
  {%- if command["lines"] | length > 0 %}
    {%- for line in command["lines"] %}
{{ line }}
    {%- endfor %}
  {%- endif %}
{%- else %}
  echo "No implementation body found for function {{ command["name"] }}"
{%- endif %}
}
